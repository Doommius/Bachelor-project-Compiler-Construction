# Code generation for arrays and records, nesting
type arrContent = record of {a : int, b : int, c : int};
type myArr1 = array of arrContent;
type myArr2 = array of myArr1;


var a : myArr2;
var b : int;
var t1 : int, t2 : int, t3 : int;
var p1 : arrContent;
var p2 : myArr1;


allocate a of length 5;

t1 = 0;
while ( t1 < |a| ) do
{
  allocate a[t1] of length 6;
  t2 = 0;
  while ( t2 < |a[t1]| ) do
  {
    allocate a[t1][t2];
    b = t1*2+t2;

    a[t1][t2].a = b;
    write b;
    

    t2 = t2 + 1;
  }
  t1 = t1 + 1; 
} 

p1 = a[3][1];
write p1.a;

